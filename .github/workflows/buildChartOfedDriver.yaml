name: Build Chart OFED

env:
  PR_LABEL: pr/release/robot_update_githubpage
  PR_REVIWER: weizhoublue
  MERGE_BRANCH: github_pages
  CHART_PATH: ofed-driver/chart
  #HELM_VERSION: v3.8.1

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'tag, sha, branch'
        required: true
        default: main
  push:
    tags:
      - ofed-driver-v[0-9]+.[0-9]+.[0-9]+
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      # can not use env here
      - ofed-driver/chart/**

permissions: write-all

jobs:
  package_chart:
    runs-on: ubuntu-latest
    outputs:
      update: ${{ env.update }}
      code_sha: ${{ env.code_sha }}
    steps:
      - name: Get information
        id: get_original_ref
        run: |
          echo '${{ toJSON(github) }}'
          if ${{ github.event_name == 'workflow_dispatch' }}; then
            echo "call by workflow_dispatch"
            echo "code_sha=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
            echo "test=false" >> $GITHUB_ENV
            echo "update=true" >> $GITHUB_ENV
          elif ${{ github.event_name == 'push' }} ; then
            echo "call by push tag"
            echo "code_sha=${GITHUB_REF##*/}" >> $GITHUB_ENV
            echo "test=false" >> $GITHUB_ENV
            echo "update=true" >> $GITHUB_ENV
          else
            echo "call by PR"
            echo "code_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
            echo "test=true" >> $GITHUB_ENV
            echo "update=false" >> $GITHUB_ENV
          fi

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.code_sha }}

      - name: Install Helm
        uses: azure/setup-helm@v4
        #with:
        #  version: ${{ env.HELM_VERSION }}

      - name: Package Chart
        continue-on-error: false
        run: |
          helm package ${{ env.ofed-driver/chart }}
          if ! ls *.tgz &>/dev/null ; then
            echo "failed to generate chart"
            exit 1
          fi
          mkdir -p tmp
          mv *.tgz tmp

      - name: E2E test
        if: ${{ env.test == true }}
        run: |
          echo "run chart test"

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.3
        if: ${{ env.update == 'true' }}
        with:
          name: chart_package_artifact
          path: tmp/*
          retention-days: 1
          if-no-files-found: error

  # update /index.yaml in the target branch
  update_githubpage:
    runs-on: ubuntu-latest
    needs: [package_chart]
    if: ${{ needs.package_chart.outputs.update == 'true' }}
    steps:
      - name: Get Base Chart URL
        id: get_base_url
        run: |
          name=${{ github.repository }}
          proj=${name#*/}
          url=https://${{ github.repository_owner }}.github.io/${proj}
          echo "URL=${url}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.MERGE_BRANCH }}
          persist-credentials: "true"

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: chart_package_artifact
          path: charts/

      - name: Update Chart Yaml
        run: |
          helm repo index  ./charts  --url ${{ env.URL }}/charts
          mv ./charts/index.yaml ./index.yaml

      - uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6.1.0
        with:
          title: "robot Update chart from ${{ needs.get_ref.outputs.code_sha }} to branch ${{ env.MERGE_BRANCH }} "
          commit-message: "robot Update chart from ${{ needs.get_ref.outputs.code_sha }} to branch ${{ env.MERGE_BRANCH }} "
          branch-suffix: timestamp
          branch: robot/update_chart
          committer: ty-dc <tao.yang@daocloud.io>
          delete-branch: true
          base: ${{ env.MERGE_BRANCH }}
          signoff: true
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: ${{ env.PR_LABEL }}
          reviewers: ${{ env.PR_REVIWER }}
